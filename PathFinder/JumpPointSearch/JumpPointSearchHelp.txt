currentNode->parent가 널이라면 당연히 8방향 다해야됨.
하고 continue;

여기부터는 부모노드가 존재하는 case

dx = currentNode->x - currentNode->parent->x;
dy = currentNode->y - currentNode->parent->y;

부모노드가 왼쪽이면
dx = 1
dy = 0

부모노드가 오른쪽이면
dx = -1
dy = 0

부모노드가 아래쪽이면
dx = 0
dy = -1

부모노드가 위쪽이면
dx = 0
dy = 1


if(dx > 0 && dy == 0) <-왼쪽에서 왔다는 의미
{
	오른쪽 탐색
	{
		-> x 증가시키면서
		-> 1. 막혔으면 끝.
		-> 2. EndPoint면 탐색 중인 위치에 노드생성후 OpenList에 넣고 끝
		-> 3. 코너면 탐색 중인 위치에 노드생성후 OpenList에 넣고 끝
	}
	+ 위쪽 코너면 오른쪽 위 탐색
	{
		-> x증가 y 감소 시키면서
		-> 1. 막혔으면 끝
		-> 2. EndPoint면 현재 탐색위치에 노드 생성후 OpenList에 넣고 끝
		-> 3. 코너면 탐색 중인 위치에 노드 생성후 OpenList에 넣고 끝
		-> 오른쪽 탐색
		{
			-> x 증가시키면서
			-> 1. 막혔으면 끝.
			-> 2. EndPoint면 대각선 탐색 시작 위치에 노드생성후 OpenList에 넣고 끝
			-> 3. 코너면 대각선 탐색 시작 위치에 노드생성후 OpenList에 넣고 끝
		}
		-> 위쪽 탐색
		{
			-> y 감소시키면서
			-> 1. 막혔으면 끝.
			-> 2. EndPoint면 대각선 탐색 시작 위치에 노드생성후 OpenList에 넣고 끝
			-> 3. 코너면 대각선 탐색 시작 위치에 노드생성후 OpenList에 넣고 끝
		}
	}
	+ 아래쪽 코너면 오른쪽 아래 탐색
	{
		-> x 증가 y 증가 시키면서
		-> 1. 막혔으면 끝
		-> 2. EndPoint면 현재 탐색위치에 노드 생성후 OpenList에 넣고 끝
		-> 3. 코너면 탐색 중인 위치에 노드 생성후 OpenList에 넣고 끝
		-> 오른쪽 탐색
		{
			-> x 증가시키면서
			-> 1. 막혔으면 끝.
			-> 2. EndPoint면 대각선 탐색 시작 위치에 노드생성후 OpenList에 넣고 끝
			-> 3. 코너면 대각선 탐색 시작 위치에 노드생성후 OpenList에 넣고 끝
		}
		-> 아래쪽 탐색
		{
			-> y 증가시키면서
			-> 1. 막혔으면 끝.
			-> 2. EndPoint면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
			-> 3. 코너면 대각선 탐색 위치에 노드 생성후 OpenList에 넣고 끝
		}
	}
}
if(dx < 0 && dy == 0) <- 오른쪽에서 왔다는 의미
{
	왼쪽 탐색
	{
		-> x 감소시키면서
		-> 1. 막혔으면 끝.
		-> 2. EndPoint면 탐색 중인 위치에 노드생성후 OpenList에 넣고 끝
		-> 3. 코너면 탐색 중인 위치에 노드생성후 OpenList에 넣고 끝
	}
	+ 위쪽 코너면 왼쪽 위 탐색
	{
		-> x 감소 y 감소 시키면서
		-> 1. 막혔으면 끝
		-> 2. EndPoint면 현재 탐색위치에 노드 생성후 OpenList에 넣고 끝
		-> 3. 코너면 탐색 중인 위치에 노드생성후 OpenList에 넣고 끝
		-> 왼쪽 위 탐색
		{
			-> 왼쪽 탐색
			{
				-> x감소 시키면서
				-> 1. 막혔으면 끝.
				-> 2. EndPoint면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
				-> 3. 코너면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
			}
			-> 위쪽 탐색
			{
				-> y감소 시키면서
				-> 1. 막혔으면 끝.
				-> 2. EndPoint면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
				-> 3. 코너면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
			}
		}
	}
	+ 아래쪽 코너면 왼쪽 아래 탐색
	{
		-> x 감소 y 증가 시키면서
		-> 1. 막혔으면 끝.
		-> 2. EndPoint면 현재 탐색 위치에 노드 생성후 OpenList에 넣고 끝
		-> 3. 코너면 현재 탐색 위치에 노드 생성후 OpenList에 넣고 끝
		왼쪽아래 탐색
		{
			-> 왼쪽 탐색
			{
				-> x 감소 시키면서
				-> 1. 막혔으면 끝
				-> 2. EndPoint면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
				-> 3. 코너면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
			}
			-> 아래쪽 탐색
			{
				-> y 증가 시키면서
				-> 1. 막혔으면 끝
				-> 2. EndPoint면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
				-> 3. 코너면 대각선 탐색 시작 위치에 노드 생성후 OpenList에 넣고 끝
			}
		}
	}
}




//여기부터 시작하면됨 일단은 자연어로 풀이부터 해놓고... 진행하자
if(dy < 0 && dx == 0) <- 아래에서 왔다는 의미
{
	위쪽 탐색
	{
		-> y감소 시키면서
		-> 1. 막혔으면 끝.
		-> 2. EndPoint면 현재 탐색 위치에 노드 생성후 OpenList에 넣고 끝
		-> 3. 코너면 현재 탐색 위치에 노드 생성후 OpenList에 넣고 끝
	}
	+오른쪽 코너면 오른쪽 위 탐색
	{
	
	}
	+왼쪽 코너면 왼쪽 위 탐색
	{

	}
}
if(dy > 0 && dx == 0) <- 위에서 왔다는 의미
{
	아래쪽 탐색
	{
		
	}
	+오른쪽 코너면 오른쪽 아래 탐색
	{

	}
	+왼쪽 코너면 왼쪽 아래 탐색
	{

	}
}
if(dx < 0 && dy < 0) <- 오른쪽에서왔음 + 아래에서 왔음
{
	왼쪽 위 탐색
	{
	
	}
	위쪽 탐색	
	왼쪽 탐색
	+왼쪽 아래 코너면 왼쪽 아래 탐색
	+오른쪽 위 코너면 오른쪽 위 탐색
}
if(dx > 0 && dy < 0)  <- 왼쪽에서 왔음 + 아래에서 왔음
{
	오른쪽 위 탐색
	위쪽 탐색
	오른쪽 탐색
	+오른쪽 아래 코너면 오른쪽 아래 탐색
	+ 왼쪽 위 코너면 왼쪽 위 탐색
}
if(dx < 0 && dy > 0)  <- 오른쪽에서 왔음 + 위에서 왔음
{
	왼쪽아래 탐색
	왼쪽 탐색	
	아래쪽 탐색
	+오른쪽 아래 코너면 오른쪽 아래 탐색
	+왼쪽 위 코너면 왼쪽 위 탐색
}
if(dx > 0 && dy > 0)  <- 왼쪽에서 왔음 + 위에서 왔음
{
	
	오른쪽 아래 탐색
	오른쪽 탐색
	왼쪽 탐색
	+오른쪽 위 코너면 오른쪽 위 탐색
	+왼쪽 아래 코너면 왼쪽 아래 탐색
}